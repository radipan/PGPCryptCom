/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.aapps.pgpcryptcom;

import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author adipu
 */
public class PanelAddSubkey extends javax.swing.JPanel {

    /**
     * Creates new form PanelAddSubkey
     */
    public PanelAddSubkey() {
        initComponents();
    }

    private final String[] RSA_KEY_SIZE_LIST = {"8192", "4096", "3072"};
    private final String[] ECDSA_KEY_SIZE_LIST = {"P521", "P384", "P256", "SECP256K1", "BRAINPOOLP256R1", "BRAINPOOLP384R1", "BRAINPOOLP512R1"};
    private final String[] EDDSA_KEY_SIZE_LIST = {"Ed25519"};
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jComboBoxAlgorithm = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxSize = new javax.swing.JComboBox<>();
        jCheckBoxCanEncrypt = new javax.swing.JCheckBox();
        jCheckBoxCanSign = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jPasswordFieldPass = new javax.swing.JPasswordField();

        jLabel4.setText("Algorithm:");

        jComboBoxAlgorithm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RSA", "ECDSA", "EDDSA", "ECDH" }));
        jComboBoxAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAlgorithmActionPerformed(evt);
            }
        });

        jLabel5.setText("Size:");

        jComboBoxSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8192", "4096", "3072" }));

        jCheckBoxCanEncrypt.setSelected(true);
        jCheckBoxCanEncrypt.setText("Can Encrypt");
        jCheckBoxCanEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCanEncryptActionPerformed(evt);
            }
        });

        jCheckBoxCanSign.setText("Can Sign");
        jCheckBoxCanSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCanSignActionPerformed(evt);
            }
        });

        jLabel1.setText("Passphrase");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxCanSign))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jCheckBoxCanEncrypt)
                                .addGap(0, 79, Short.MAX_VALUE))
                            .addComponent(jComboBoxAlgorithm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCanSign)
                    .addComponent(jCheckBoxCanEncrypt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jPasswordFieldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public String getKeyAlg()
    {
        return jComboBoxAlgorithm.getSelectedItem().toString();
    }
    
    public String getKeySize()
    {
        return jComboBoxSize.getSelectedItem().toString();
    }
    
    public String getPassphrase()
    {
        return String.valueOf(jPasswordFieldPass.getPassword());
    }
    
    public boolean getCanEncrypt()
    {
        return jCheckBoxCanEncrypt.isSelected();
    }
    
    public boolean getCanSign()
    {
        return jCheckBoxCanSign.isSelected();
    }
    
    private void jComboBoxAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAlgorithmActionPerformed
        switch (jComboBoxAlgorithm.getSelectedItem().toString())
        {
            case "RSA" -> 
            {
                jComboBoxSize.setModel(new DefaultComboBoxModel<>(RSA_KEY_SIZE_LIST));
                jCheckBoxCanEncrypt.setEnabled(true);
                jCheckBoxCanSign.setEnabled(true);
                jCheckBoxCanEncrypt.setSelected(true);
                
            }
            case "ECDSA" -> 
            {
                jComboBoxSize.setModel(new DefaultComboBoxModel<>(ECDSA_KEY_SIZE_LIST));
                jCheckBoxCanEncrypt.setEnabled(false);
                jCheckBoxCanEncrypt.setSelected(false);
                jCheckBoxCanSign.setEnabled(true); 
                jCheckBoxCanSign.setSelected(true);

            }
            case "EDDSA" -> 
            {
                jComboBoxSize.setModel(new DefaultComboBoxModel<>(EDDSA_KEY_SIZE_LIST));
                jCheckBoxCanEncrypt.setEnabled(false);
                jCheckBoxCanEncrypt.setSelected(false);
                jCheckBoxCanSign.setEnabled(true); 
                jCheckBoxCanSign.setSelected(true);

            }
            case "ECDH" ->
            {
                jComboBoxSize.setModel(new DefaultComboBoxModel<>(ECDSA_KEY_SIZE_LIST));
                jCheckBoxCanEncrypt.setEnabled(true);
                jCheckBoxCanSign.setEnabled(false); 
                jCheckBoxCanEncrypt.setSelected(true);
                jCheckBoxCanSign.setSelected(false);
            }
            default -> {
            }

        }
    }//GEN-LAST:event_jComboBoxAlgorithmActionPerformed

    private void jCheckBoxCanEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCanEncryptActionPerformed
        if (!jCheckBoxCanEncrypt.isSelected() && !jCheckBoxCanSign.isSelected())
        {
            jCheckBoxCanEncrypt.setSelected(true);
        }
    }//GEN-LAST:event_jCheckBoxCanEncryptActionPerformed

    private void jCheckBoxCanSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCanSignActionPerformed
        if (!jCheckBoxCanEncrypt.isSelected() && !jCheckBoxCanSign.isSelected())
        {
            jCheckBoxCanSign.setSelected(true);
        }
    }//GEN-LAST:event_jCheckBoxCanSignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxCanEncrypt;
    private javax.swing.JCheckBox jCheckBoxCanSign;
    private javax.swing.JComboBox<String> jComboBoxAlgorithm;
    private javax.swing.JComboBox<String> jComboBoxSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordFieldPass;
    // End of variables declaration//GEN-END:variables
}
